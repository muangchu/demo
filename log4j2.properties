# Define the root logger with appenders
status = error
name = PropertiesConfig

# Define the root logger's level and appenders
#rootLogger.level = info
#rootLogger.appenderRef.console.ref = Console
#rootLogger.appenderRef.rolling.ref = RollingFile

# Console appender configuration
appender.console.type = Console
appender.console.name = Console
appender.console.layout.type = PatternLayout
#appender.console.layout.pattern = [%-5p] %d{ISO8601} %c{1} - %m%n
appender.console.layout.pattern = %d [%t ]%-5p %c{1} -%m%n

# Rolling file appender configuration
appender.rolling.type = RollingFile
appender.rolling.name = RollingFile
appender.rolling.fileName = logs/app.log
appender.rolling.filePattern = logs/app-%d{yyyy-MM-dd}-%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d [%t ]%-5p %c{1} -%m%n
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
# Size-based triggering policy (rolls when the log file reaches a specified size)
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 10KB

appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 5

# Logger configuration for the specific package
logger.rolling.name = org.example
logger.rolling.level = info
logger.rolling.appenderRef.console.ref = Console
logger.rolling.appenderRef.rolling.ref = RollingFile

# Root logger uses both the console and rolling file appenders
rootLogger.appenderRefs = console, rolling
